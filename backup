#! /usr/bin/env python
import gtk, pygtk, sys, argparse, time, pynotify, os, signal
from subprocess import call

heirarchy = ['hourly','daily','weekly','monthly']
retention = [24,7,4,12]

def cycle(loc):
	last = 0
	try:
		f = open('/media/WD/Backups/kevin/.hist','r+')
		last = int(f.readlines()[loc].strip())
	except IOError as e:
		print 'Could not read file: I/O error ({0}): {1}'.format(e.errno, e.strerror)
	except ValueError:
		print 'Incorrect input for integer.'

	else:
		if last == retention[loc]-1:
			cycle(loc+1)
			f.write('0')
		else:
			call(['rsnapshot',heirarchy[loc]])
			f.write(str(last+1))
		f.close()
	return

def notification(string,icon):
	n = pynotify.Notification("Backup",string,icon)
	n.set_urgency(pynotify.URGENCY_CRITICAL)
	n.show()
	return

def confirm():
	notification(action.title() + ' backup is scheduleded to run in two minutes. Please connect backup medium.','dialog-warning')

	f = open('/tmp/backup.pid','w')
	f.write(str(os.getpid()))
	f.close()

	time.sleep(120)


	if (os.path.exists('/media/WD/Backups/kevin')):
		notification(action.title() + ' backup is now running. Please do not remove backup medium.','dialog-warning')
		os.remove('/tmp/backup.pid')
		return

	dialog_response = 0
	dialog = gtk.MessageDialog(None, gtk.DIALOG_MODAL,\
		gtk.MESSAGE_QUESTION, gtk.BUTTONS_YES_NO,\
		action.title() + ' backup is scheduleded to run.' +\
		' Is the backup medium mounted at /media/WD?')

	dialog_response = dialog.run()
	dialog.destroy()

	if dialog_response == -8:
		notification(action.title() + ' backup is now running. Please do not remove backup medium.','dialog-warning')
		os.remove('/tmp/backup.pid')
		return
	else:
		time.sleep(2)
		dialog = gtk.MessageDialog(None,0,gtk.MESSAGE_INFO,gtk.BUTTONS_OK_CANCEL,'Please insert the medium now.')
		dialog_response = dialog.run()
		dialog.destroy()
		print dialog_response
		if dialog_response == -5:
			notification(action.title() + ' backup is now running. Please do not remove backup medium.','dialog-warning')
			os.remove('/tmp/backup.pid')
			return
		else:
			print 'error code'
			exit()

pynotify.init('Backup')
parser = argparse.ArgumentParser()
parser.add_argument('action',action='store')

action = parser.parse_args(sys.argv[1:]).__dict__['action']

if action in heirarchy:
	confirm()
	cycle(heirarchy.find(action))

elif action == 'test':
	print 'testing...'
	confirm()

elif action == 'kill':
	print 'killing...'
	if os.path.exists('/tmp/backup.pid'):
		os.kill(int(open('/tmp/backup.pid').read().strip()),signal.SIGHUP)
		notification('The pending backup has been cancelled.','dialog-info')
		exit()
	else:
		print 'Process not found.'
		exit()

else:
	print 'Invalid option.'
	exit()

notification(action.title() + " backup has completed now.",'dialog-info')
